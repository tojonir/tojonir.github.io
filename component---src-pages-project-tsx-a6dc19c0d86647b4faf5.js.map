{"version":3,"file":"component---src-pages-project-tsx-a6dc19c0d86647b4faf5.js","mappings":"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","sources":["webpack://portfolio/./src/components/ProjectCard.tsx","webpack://portfolio/./src/components/Category.tsx","webpack://portfolio/./src/pages/project.tsx"],"sourcesContent":["import { solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\r\nimport React, { FC, useState } from \"react\";\r\nimport SocialNetwork from \"../containers/SocialNetwork\";\r\n\r\ninterface ProjectCardProps {\r\n  data: any;\r\n}\r\n\r\nconst ProjectCard: FC<ProjectCardProps> = ({ data }) => {\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  console.log(data);\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"relative group cursor-pointer overflow-hidden\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <GatsbyImage\r\n          image={data.thumb.childImageSharp.gatsbyImageData}\r\n          alt={data.name}\r\n          className=\"h-full duration-100 group-hover:scale-110\"\r\n        />\r\n        <div className=\"absolute top-0 w-full h-full flex items-end  bg-gradient-to-t from-black to-transparent\">\r\n          <p className=\"font-semibold p-5\">{data.name}</p>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          showModal ? \"\" : \"hidden\"\r\n        } absolute h-screen w-screen overflow-hidden  bg-black bg-opacity-70 top-0 left-0 flex justify-center z-50`}\r\n      >\r\n        <div className=\"bg-white flex flex-col justify-between max-w-[1000px] md:mx-5 realtive overflow-y-scroll\">\r\n          <div>\r\n            <h3 className=\"p-3 text-[44px] sm:text-[20px] font-bold text-purple-600 bg-black rounded-none\">\r\n              {data.name}\r\n            </h3>\r\n            {data.content.map((tag: any, i: number) => (\r\n              <div key={i}>\r\n                <GatsbyImage\r\n                  image={tag.childImageSharp.gatsbyImageData}\r\n                  alt={data.name}\r\n                  className=\"w-full\"\r\n                />\r\n              </div>\r\n            ))}\r\n            <div className=\"absolute bottom-0 right-5\">\r\n              {data.tag.map((tag: any, i: number) => (\r\n                <div key={i}>\r\n                  <GatsbyImage\r\n                    image={tag.childImageSharp.gatsbyImageData}\r\n                    alt={data.name}\r\n                    className=\"w-[50px]\"\r\n                  />\r\n                </div>\r\n              ))}\r\n              <div\r\n                className=\"bg-red-600 p-2 flex items-center justify-center hover:bg-opacity-80 cursor-pointer rounded-[2px]\"\r\n                onClick={() => setShowModal(false)}\r\n              >\r\n                <div className=\"w-[30px] h-[30px] rounded-[5px] border border-white flex items-center justify-center\">\r\n                  <FontAwesomeIcon icon={solid(\"close\")} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {data.link !== null && (\r\n            <div className=\"w-full text-center py-10\">\r\n              <a\r\n                className=\"text-bleuDark font-medium text-[18px]\"\r\n                href={data.link}\r\n                target=\"_blank\"\r\n              >\r\n                {data.link}\r\n              </a>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flex flex-col items-center w-full p-5\">\r\n            <h3 className=\"text-bleuDark font-medium text-[24px]\">\r\n              Contact me now on\r\n            </h3>\r\n            <SocialNetwork iconStyle=\"text-bleuDark hover:text-purple-600\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import { graphql, useStaticQuery } from \"gatsby\";\r\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\r\nimport React from \"react\";\r\nimport { FC } from \"react\";\r\n\r\ninterface CategoryProps {\r\n  title: string;\r\n  isSelected: boolean;\r\n  onClick?: () => void;\r\n}\r\n\r\nconst Category: FC<CategoryProps> = ({\r\n  title,\r\n  isSelected,\r\n  onClick = () => console.log(\"click\"),\r\n}) => {\r\n  const bgImage = useStaticQuery(graphql`\r\n    query {\r\n      file(relativePath: { eq: \"category.png\" }) {\r\n        childImageSharp {\r\n          gatsbyImageData(layout: CONSTRAINED)\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  return (\r\n    <div\r\n      className={`flex items-center mr-5 ${\r\n        isSelected ? \"cursor-not-allowed opacity-80\" : \"cursor-pointer\"\r\n      } group`}\r\n      onClick={() => onClick()}\r\n    >\r\n      <div\r\n        className={`w-[50px] h-[50px] rounded-[50%] overflow-hidden z-30 relative flex items-center justify-center bg-blue`}\r\n      >\r\n        <p className=\"text-[20px] font-medium\">#</p>\r\n      </div>\r\n      <div\r\n        className={`w-[150px] h-[40px] border border-blue ml-[-15px] flex items-center justify-center relative overflow-hidden`}\r\n      >\r\n        <p className=\"text-white absolute top-0 w-full h-full z-20 flex items-center justify-center bg-black bg-opacity-30 group-hover:bg-opacity-10  font-medium\">\r\n          {title}\r\n        </p>\r\n        <GatsbyImage\r\n          image={bgImage.file.childImageSharp.gatsbyImageData}\r\n          alt=\"tojonirina\"\r\n          className=\"w-full h-full blur-[1.2px]\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import { solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { graphql, HeadFC, PageProps } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport { FC } from \"react\";\r\nimport Category from \"../components/Category\";\r\nimport ProjectCard from \"../components/ProjectCard\";\r\nimport Layout from \"../containers/Layout\";\r\nimport { category } from \"../utils/constant\";\r\n\r\nconst Project: FC<PageProps> = ({ data }) => {\r\n  const [filter, setFilter] = useState<string[]>([]);\r\n  const { project } = data;\r\n  return (\r\n    <Layout>\r\n      <div className=\"offset !mb-[5%]\">\r\n        <div className=\"rounded-none border-b border-b-gray-300 pt-5\">\r\n          <div className=\"flex overflow-x-scroll\">\r\n            {category.map((item) => (\r\n              <Category\r\n                title={item.title}\r\n                onClick={() =>\r\n                  filter.indexOf(item.slug) === -1\r\n                    ? setFilter([...filter, item.slug])\r\n                    : null\r\n                }\r\n                isSelected={filter.indexOf(item.slug) !== -1}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"flex flex-wrap py-5\">\r\n            {filter?.length === 0 ? (\r\n              <div className=\"flex items-center bg-gray-600 w-fit rounded-[20px] px-2 py-1\">\r\n                <span className=\"text-[12px]\">No filters</span>\r\n                <FontAwesomeIcon\r\n                  icon={solid(\"close\")}\r\n                  className=\"text-[11px] ml-3\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              filter?.map((item) => (\r\n                <div className=\"flex items-center bg-gray-600 w-fit rounded-[20px] px-2 py-1 mr-3 mb-3 cursor-pointer bg-opacity-50 hover:bg-opacity-100\">\r\n                  <span className=\"text-[12px]\">{item}</span>\r\n                  <FontAwesomeIcon\r\n                    icon={solid(\"close\")}\r\n                    className=\"text-[11px] ml-3\"\r\n                    onClick={() =>\r\n                      setFilter(filter.filter((elem) => elem !== item))\r\n                    }\r\n                  />\r\n                </div>\r\n              ))\r\n            )}\r\n            {filter.length > 0 && (\r\n              <div\r\n                className=\"flex items-center bg-red-600 w-fit rounded-[20px] px-2 py-1 mr-3 mb-3 cursor-pointer bg-opacity-100 hover:bg-opacity-95\"\r\n                onClick={() => setFilter([])}\r\n              >\r\n                <span className=\"text-[12px]\">CLear filter</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"grid grid-cols-4 gap-10 sm:grid-cols-1 auto-rows-[250px] !my-[5%]\">\r\n          {project.nodes.map((item: any, i: number) =>\r\n            filter.length === 0 ? (\r\n              <ProjectCard key={i} data={item} />\r\n            ) : filter.indexOf(item.category) !== -1 ? (\r\n              <ProjectCard key={i} data={item} />\r\n            ) : null\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n\r\nexport const Head: HeadFC = () => <title>Project</title>;\r\n\r\nexport const query = graphql`\r\n  query {\r\n    project: allProjectJson {\r\n      nodes {\r\n        name\r\n        category\r\n        link\r\n        tag {\r\n          childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED)\r\n          }\r\n        }\r\n        thumb {\r\n          childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED)\r\n          }\r\n        }\r\n        content {\r\n          childImageSharp {\r\n            gatsbyImageData(layout: CONSTRAINED)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","data","showModal","setShowModal","useState","console","log","React","className","onClick","GatsbyImage","image","thumb","childImageSharp","gatsbyImageData","alt","name","content","map","tag","i","key","FontAwesomeIcon","icon","link","href","target","SocialNetwork","iconStyle","title","isSelected","bgImage","useStaticQuery","file","filter","setFilter","project","Layout","category","item","Category","indexOf","slug","length","elem","nodes","ProjectCard","Head"],"sourceRoot":""}
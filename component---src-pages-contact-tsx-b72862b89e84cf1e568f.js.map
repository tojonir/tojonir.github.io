{"version":3,"file":"component---src-pages-contact-tsx-b72862b89e84cf1e568f.js","mappings":"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","sources":["webpack://portfolio/./src/pages/contact.tsx"],"sourcesContent":["import { solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport anime from \"animejs\";\r\nimport { HeadFC } from \"gatsby\";\r\nimport React, { useState } from \"react\";\r\nimport Layout from \"../containers/Layout\";\r\nimport SocialNetwork from \"../containers/SocialNetwork\";\r\nimport { serverUrl } from \"../utils/constant\";\r\n\r\nconst Contact = () => {\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [subject, setSubject] = useState<string>(\"\");\r\n  const [mail, setMail] = useState<string>(\"\");\r\n  const [message, setMessage] = useState<string>(\"\");\r\n  const [isValidMail, setIsValidMail] = useState<boolean>(true);\r\n  const [isSending, setIsSending] = useState<boolean>(false);\r\n\r\n  const showNotification = () => {\r\n    anime({\r\n      targets: document.getElementById(\"notification\"),\r\n      right: \"0%\",\r\n      easing: \"easeInOutSine\",\r\n      duration: 500,\r\n    });\r\n    setTimeout(() => {\r\n      anime({\r\n        targets: document.getElementById(\"notification\"),\r\n        right: \"-100%\",\r\n        easing: \"easeInOutSine\",\r\n        duration: 500,\r\n      });\r\n    }, 3000);\r\n  };\r\n\r\n  const send = () => {\r\n    if (name !== \"\" && isValidMail && message !== \"\" && subject !== \"\") {\r\n      setIsSending(true);\r\n      const http = new XMLHttpRequest();\r\n      http.onreadystatechange = function () {\r\n        if (this.readyState === 4) {\r\n          setIsSending(false);\r\n        }\r\n        if (this.readyState === 4 && this.responseText === \"sent\") {\r\n          setMail(\"\");\r\n          setMessage(\"\");\r\n          setSubject(\"\");\r\n          setName(\"\");\r\n          showNotification();\r\n        }\r\n        if (this.readyState === 4 && this.status === 404) {\r\n          alert(this.responseText);\r\n        }\r\n      };\r\n      http.open(\"POST\", serverUrl + \"/mail-me\", true);\r\n      http.setRequestHeader(\"content-type\", \"application/json\");\r\n      http.send(\r\n        JSON.stringify({\r\n          mail: mail,\r\n          name: name,\r\n          message: message,\r\n          subject: subject,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <Layout>\r\n      <div className=\"relative overflow-x-hidden\">\r\n        <div className=\"w-full flex sm:flex-col !my-[5%] items-center justify-between offset\">\r\n          <div className=\"sm:w-full\">\r\n            <h3 className=\"text-[30px] sm:text-[25px] font-semibold\">\r\n              I am glad to hear,\r\n              <br />\r\n              Say more about your Project,\r\n              <br />\r\n              <span className=\"text-orange\">Let's explore.</span>\r\n            </h3>\r\n            <p className=\"text-gray-400\">Reach me on social network</p>\r\n            <SocialNetwork />\r\n          </div>\r\n          <div className=\"grid grid-cols-1 gap-5 w-1/2 sm:w-full sm:pt-5\">\r\n            <h4 className=\"text-[20px] font-medium\">Drop me some word</h4>\r\n            <input\r\n              className=\"px-2 py-1 rounded-[5px] outline-none text-gray-600\"\r\n              placeholder=\"fullname\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              className={`px-2 py-1 rounded-[5px] outline-none text-gray-600 ${\r\n                isValidMail ? \"\" : mail !== \"\" && \"border border-red-600\"\r\n              }`}\r\n              placeholder=\"Email\"\r\n              value={mail}\r\n              onChange={(e) => {\r\n                setMail(e.target.value);\r\n                setIsValidMail(\r\n                  /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(mail)\r\n                );\r\n              }}\r\n            />\r\n            <input\r\n              className=\"px-2 py-1 rounded-[5px] outline-none text-gray-600\"\r\n              placeholder=\"Subject\"\r\n              value={subject}\r\n              onChange={(e) => setSubject(e.target.value)}\r\n            />\r\n            <p className=\"text-blue\">Tell me more</p>\r\n            <textarea\r\n              className=\"px-2 py-1 rounded-[5px] h-[150px] outline-none text-gray-600\"\r\n              placeholder=\"Message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n            <div>\r\n              <button\r\n                className=\"bg-blue px-10 py-1 rounded-[5px] float-right\"\r\n                onClick={() => send()}\r\n              >\r\n                {isSending ? \"Sending...\" : \"Send\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"flex bg-white w-fit rounded-none fixed bottom-10 right-[-100%]\"\r\n          id=\"notification\"\r\n        >\r\n          <div className=\"bg-green-500 p-5 rounded-none flex items-center justify-center\">\r\n            <FontAwesomeIcon icon={solid(\"check\")} />\r\n          </div>\r\n          <div className=\"p-2\">\r\n            <h3 className=\"text-bleuDark font-bold\">Message sent!</h3>\r\n            <p className=\"text-bleuDark\">I will get back to you soon.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\nexport default Contact;\r\n\r\nexport const Head: HeadFC = () => <title>Contact</title>;\r\n"],"names":["name","setName","useState","subject","setSubject","mail","setMail","message","setMessage","isValidMail","setIsValidMail","isSending","setIsSending","send","http","XMLHttpRequest","onreadystatechange","this","readyState","responseText","anime","targets","document","getElementById","right","easing","duration","setTimeout","status","alert","open","serverUrl","setRequestHeader","JSON","stringify","React","Layout","className","SocialNetwork","placeholder","value","onChange","e","target","type","test","onClick","id","FontAwesomeIcon","icon","Head"],"sourceRoot":""}